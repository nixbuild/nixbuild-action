name: CI/CD

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - install-with-nix-quick-install-action
      - install-with-install-nix-action
      - test-build
    steps:
      - uses: actions/checkout@v3
      - uses: nixbuild/nix-quick-install-action@v22
        with:
          nix_conf: experimental-features = nix-command flakes
      - uses: ./
        with:
          nixbuild_ssh_key: ${{ secrets.nixbuild_ssh_key }}
          generate_summary_for: 'workflow'
      - name: Build release script
        run: nix build .#packages.x86_64-linux.release
      - name: Verify build signature
        run: test "$(nix path-info ./result --json | jq -r '.[].signatures[0]' | sed 's/:.*//')" = "nixbuild.net/rickard-1"
      - name: Release if needed
        if: github.ref == 'refs/heads/master'
        run: ./result ${{steps.nix-archives.outputs.download-path}} ./RELEASE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        system: [ x86_64-linux ]
    steps:
      - uses: actions/checkout@v3
      - uses: nixbuild/nix-quick-install-action@v22
        with:
          nix_conf: experimental-features = nix-command flakes
      - uses: ./
        with:
          nixbuild_ssh_key: ${{ secrets.nixbuild_ssh_key }}
          generate_summary_for: 'job'
          keep-builds-running: true # test that we can set a setting
      - name: Run a test build
        run: |
          cat flake.nix | sed "s/__SIMPLE_TEST_BUILD__/$RANDOM$RANDOM$RANDOM$RANDOM/" > flake.nix.new
          mv flake.nix.new flake.nix
          nix build --system ${{ matrix.system }} .#simple-test-build
      - name: Verify build signature
        run: test "$(nix path-info ./result --json | jq -r '.[].signatures[0]' | sed 's/:.*//')" = "nixbuild.net/rickard-1"


  install-with-nix-quick-install-action:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        nix_version:
          - 2.12.0
          - 2.11.1
          - 2.10.3
          - 2.9.2
          - 2.8.1
          - 2.7.0
          - 2.6.1
          - 2.5.1
          - 2.4
          - 2.3.16
          - 2.2.2
          - 2.1.3
          - 2.0.4
        exclude:
          - os: macos-latest
            nix_version: 2.0.4
    steps:
      - uses: actions/checkout@v3
      - uses: nixbuild/nix-quick-install-action@v22
        with:
          nix_version: ${{ matrix.nix_version }}
      - uses: ./
        with:
          nixbuild_ssh_key: ${{ secrets.nixbuild_ssh_key }}
          keep-builds-running: true # test that we can set a setting


  install-with-install-nix-action:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
      - uses: ./
        with:
          nixbuild_ssh_key: ${{ secrets.nixbuild_ssh_key }}
          keep-builds-running: true # test that we can set a setting
